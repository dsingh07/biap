=====================
Model field reference
=====================

.. module:: django_extras.db.models.fields
   :synopsis: Additional field types.

.. currentmodule:: django_extras.db.models

.. note::

    All fields registered with south_ (if used by your project).

.. _south: http://south.aeracode.org/

Field types
===========

.. currentmodule:: django_extras.db.models


``ColorField``
--------------

.. class:: ColorField([allow_alpha=False, max_length=40, **options])

    A :class:`CharField` that checks that the value is a valid CSS color value.
    ``allow_alpha`` controls if colors can support alpha values.


``MoneyField``
--------------

.. class:: MoneyField([max_digits=40, decimal_places=4, **options])

    A :class:`DecimalField` that sets up sensible defaults for monetary values, in
    addition the :class:`MoneyField` will return values as instances of the
    :class:`Money` type. The :class:`Money` type is based on Pythons decimal
    object.

.. note::
    The current implementation does not store the currency code with the money
    value.


``PercentField``
----------------

.. class:: PercentField(**options)

    A :class:`FloatField` that represents a percentage value. Validates provided value to
    ensure it is within the range 0 to 100.


``LatitudeField``
-----------------

.. class:: LatitudeField(**options)

    A :class:`FloatField` that represents a latitude. Validates provided value to
    ensure it is within the range -90.0 to 90.0



``LongitudeField``
------------------

.. class:: LongitudeField(**options)

    A :class:`FloatField` that represents a longitude. Values are validated
    to be within the range -180.0 to 180.0.


``JsonField``
--------------

.. class:: JsonField([dump_options={'cls': DjangoJSONEncoder}, load_options={}, **options])

    A :class:`TextField` that handles serialisation/deserialization of JSON
    structures into a database field.
